// AUTOGENERATED DO NOT MODIFY

using PdfLexer;
using static PdfLexer.Validation.MathUtil;

namespace PdfLexer.Validation;

using System.Linq;

internal partial class APM_OptContentCreatorInfo : APM_OptContentCreatorInfo__Base
{
}

internal partial class APM_OptContentCreatorInfo__Base : ISpecification<PdfDictionary>
{
    public static bool RuleGroup() { return true; }
    public static string Name { get; } = "OptContentCreatorInfo";
    public static bool AppliesTo(decimal version, List<string> extensions) => true; // managed by links
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        ctx.Run<APM_OptContentCreatorInfo_Creator, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_OptContentCreatorInfo_Subtype, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_OptContentCreatorInfo_SubType, PdfDictionary>(stack, obj, parent);
        switch (ctx.Version) {
            case 1.5m:
            case 1.6m:
            case 1.7m:
            case 1.8m:
            case 1.9m:
            case 2.0m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_15_16_17_18_19_20.Contains(x)))
                {
                    ctx.Fail<APM_OptContentCreatorInfo>($"Unknown field {extra} for version {ctx.Version}");
                }
                break;
            default:
                break;
        }
    }

    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) 
    {
        var c = ctx.Clone();
        
        c.Run<APM_OptContentCreatorInfo_Subtype, PdfDictionary>(new CallStack(), obj, null);
        if (c.Errors.Any())
        {
            return false;
        }
        return true;
    }

    public static List<string> AllowedFields_15_16_17_18_19_20 { get; } = new List<string> 
    {
        "Creator", "Subtype", "SubType"
    };
    


}

/// <summary>
/// OptContentCreatorInfo_Creator Table 100, CreatorInfo cell
/// </summary>
internal partial class APM_OptContentCreatorInfo_Creator : APM_OptContentCreatorInfo_Creator__Base
{
}


internal partial class APM_OptContentCreatorInfo_Creator__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "OptContentCreatorInfo_Creator";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var (val, wasIR) = ctx.GetRequired<PdfString, APM_OptContentCreatorInfo_Creator>(obj, "Creator", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// OptContentCreatorInfo_Subtype 
/// </summary>
internal partial class APM_OptContentCreatorInfo_Subtype : APM_OptContentCreatorInfo_Subtype__Base
{
}


internal partial class APM_OptContentCreatorInfo_Subtype__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "OptContentCreatorInfo_Subtype";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var (val, wasIR) = ctx.GetRequired<PdfName, APM_OptContentCreatorInfo_Subtype>(obj, "Subtype", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restictions
        // no linked objects
        
    }


}

/// <summary>
/// OptContentCreatorInfo_SubType 
/// </summary>
internal partial class APM_OptContentCreatorInfo_SubType : APM_OptContentCreatorInfo_SubType__Base
{
}


internal partial class APM_OptContentCreatorInfo_SubType__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "OptContentCreatorInfo_SubType";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var (val, wasIR) = ctx.GetRequired<PdfName, APM_OptContentCreatorInfo_SubType>(obj, "SubType", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restictions
        // no linked objects
        
    }


}

