// AUTOGENERATED DO NOT MODIFY

using PdfLexer;
using static PdfLexer.Validation.MathUtil;

namespace PdfLexer.Validation;

using System.Linq;

internal partial class APM_LegalAttestation : APM_LegalAttestation_Base
{
}

internal partial class APM_LegalAttestation_Base : ISpecification<PdfDictionary>
{
    public static bool RuleGroup() { return true; }
    public static string Name { get; } = "LegalAttestation";
    public static bool AppliesTo(decimal version, List<string> extensions) => true; // managed by links
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        ctx.Run<APM_LegalAttestation_JavaScriptActions, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_LaunchActions, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_URIActions, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_MovieActions, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_SoundActions, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_HideAnnotationActions, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_GoToRemoteActions, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_AlternateImages, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_ExternalStreams, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_TrueTypeFonts, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_ExternalRefXobjects, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_ExternalOPIdicts, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_NonEmbeddedFonts, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_DevDepGS_OP, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_DevDepGS_HT, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_DevDepGS_TR, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_DevDepGS_UCR, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_DevDepGS_BG, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_DevDepGS_FL, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_Annotations, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_OptionalContent, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_LegalAttestation_Attestation, PdfDictionary>(stack, obj, parent);
        switch (ctx.Version) {
            case 1.5m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_15.Contains(x)))
                {
                    ctx.Fail<APM_LegalAttestation>($"Unknown field {extra} for version 1.5");
                }
                break;
            case 1.6m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_16.Contains(x)))
                {
                    ctx.Fail<APM_LegalAttestation>($"Unknown field {extra} for version 1.6");
                }
                break;
            case 1.7m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_17.Contains(x)))
                {
                    ctx.Fail<APM_LegalAttestation>($"Unknown field {extra} for version 1.7");
                }
                break;
            case 1.8m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_18.Contains(x)))
                {
                    ctx.Fail<APM_LegalAttestation>($"Unknown field {extra} for version 1.8");
                }
                break;
            case 1.9m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_19.Contains(x)))
                {
                    ctx.Fail<APM_LegalAttestation>($"Unknown field {extra} for version 1.9");
                }
                break;
            case 2.0m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_20.Contains(x)))
                {
                    ctx.Fail<APM_LegalAttestation>($"Unknown field {extra} for version 2.0");
                }
                break;
            default:
                break;
        }
    }

    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) 
    {
        return false;
    }

    public static HashSet<string> AllowedFields_15 { get; } = new HashSet<string> 
    {
        "JavaScriptActions", "LaunchActions", "URIActions", "MovieActions", "SoundActions", "HideAnnotationActions", "GoToRemoteActions", "AlternateImages", "ExternalStreams", "TrueTypeFonts", "ExternalRefXobjects", "ExternalOPIdicts", "NonEmbeddedFonts", "DevDepGS_OP", "DevDepGS_HT", "DevDepGS_TR", "DevDepGS_UCR", "DevDepGS_BG", "DevDepGS_FL", "Annotations", "OptionalContent", "Attestation"
    };
    public static HashSet<string> AllowedFields_16 { get; } = new HashSet<string> 
    {
        "JavaScriptActions", "LaunchActions", "URIActions", "MovieActions", "SoundActions", "HideAnnotationActions", "GoToRemoteActions", "AlternateImages", "ExternalStreams", "TrueTypeFonts", "ExternalRefXobjects", "ExternalOPIdicts", "NonEmbeddedFonts", "DevDepGS_OP", "DevDepGS_HT", "DevDepGS_TR", "DevDepGS_UCR", "DevDepGS_BG", "DevDepGS_FL", "Annotations", "OptionalContent", "Attestation"
    };
    public static HashSet<string> AllowedFields_17 { get; } = new HashSet<string> 
    {
        "JavaScriptActions", "LaunchActions", "URIActions", "MovieActions", "SoundActions", "HideAnnotationActions", "GoToRemoteActions", "AlternateImages", "ExternalStreams", "TrueTypeFonts", "ExternalRefXobjects", "ExternalOPIdicts", "NonEmbeddedFonts", "DevDepGS_OP", "DevDepGS_HT", "DevDepGS_TR", "DevDepGS_UCR", "DevDepGS_BG", "DevDepGS_FL", "Annotations", "OptionalContent", "Attestation"
    };
    public static HashSet<string> AllowedFields_18 { get; } = new HashSet<string> 
    {
        "JavaScriptActions", "LaunchActions", "URIActions", "MovieActions", "SoundActions", "HideAnnotationActions", "GoToRemoteActions", "AlternateImages", "ExternalStreams", "TrueTypeFonts", "ExternalRefXobjects", "ExternalOPIdicts", "NonEmbeddedFonts", "DevDepGS_OP", "DevDepGS_HT", "DevDepGS_TR", "DevDepGS_UCR", "DevDepGS_BG", "DevDepGS_FL", "Annotations", "OptionalContent", "Attestation"
    };
    public static HashSet<string> AllowedFields_19 { get; } = new HashSet<string> 
    {
        "JavaScriptActions", "LaunchActions", "URIActions", "MovieActions", "SoundActions", "HideAnnotationActions", "GoToRemoteActions", "AlternateImages", "ExternalStreams", "TrueTypeFonts", "ExternalRefXobjects", "ExternalOPIdicts", "NonEmbeddedFonts", "DevDepGS_OP", "DevDepGS_HT", "DevDepGS_TR", "DevDepGS_UCR", "DevDepGS_BG", "DevDepGS_FL", "Annotations", "OptionalContent", "Attestation"
    };
    public static HashSet<string> AllowedFields_20 { get; } = new HashSet<string> 
    {
        "JavaScriptActions", "LaunchActions", "URIActions", "MovieActions", "SoundActions", "HideAnnotationActions", "GoToRemoteActions", "AlternateImages", "ExternalStreams", "TrueTypeFonts", "ExternalRefXobjects", "ExternalOPIdicts", "NonEmbeddedFonts", "DevDepGS_OP", "DevDepGS_HT", "DevDepGS_TR", "DevDepGS_UCR", "DevDepGS_BG", "DevDepGS_FL", "Annotations", "OptionalContent", "Attestation"
    };
    


}

/// <summary>
/// LegalAttestation_JavaScriptActions Table 264
/// </summary>
internal partial class APM_LegalAttestation_JavaScriptActions : APM_LegalAttestation_JavaScriptActions_Base
{
}


internal partial class APM_LegalAttestation_JavaScriptActions_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_JavaScriptActions";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_JavaScriptActions>(obj, "JavaScriptActions", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_LaunchActions 
/// </summary>
internal partial class APM_LegalAttestation_LaunchActions : APM_LegalAttestation_LaunchActions_Base
{
}


internal partial class APM_LegalAttestation_LaunchActions_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_LaunchActions";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_LaunchActions>(obj, "LaunchActions", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_URIActions 
/// </summary>
internal partial class APM_LegalAttestation_URIActions : APM_LegalAttestation_URIActions_Base
{
}


internal partial class APM_LegalAttestation_URIActions_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_URIActions";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_URIActions>(obj, "URIActions", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_MovieActions 
/// </summary>
internal partial class APM_LegalAttestation_MovieActions : APM_LegalAttestation_MovieActions_Base
{
}


internal partial class APM_LegalAttestation_MovieActions_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_MovieActions";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_MovieActions>(obj, "MovieActions", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_SoundActions 
/// </summary>
internal partial class APM_LegalAttestation_SoundActions : APM_LegalAttestation_SoundActions_Base
{
}


internal partial class APM_LegalAttestation_SoundActions_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_SoundActions";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_SoundActions>(obj, "SoundActions", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_HideAnnotationActions 
/// </summary>
internal partial class APM_LegalAttestation_HideAnnotationActions : APM_LegalAttestation_HideAnnotationActions_Base
{
}


internal partial class APM_LegalAttestation_HideAnnotationActions_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_HideAnnotationActions";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_HideAnnotationActions>(obj, "HideAnnotationActions", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_GoToRemoteActions 
/// </summary>
internal partial class APM_LegalAttestation_GoToRemoteActions : APM_LegalAttestation_GoToRemoteActions_Base
{
}


internal partial class APM_LegalAttestation_GoToRemoteActions_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_GoToRemoteActions";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_GoToRemoteActions>(obj, "GoToRemoteActions", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_AlternateImages 
/// </summary>
internal partial class APM_LegalAttestation_AlternateImages : APM_LegalAttestation_AlternateImages_Base
{
}


internal partial class APM_LegalAttestation_AlternateImages_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_AlternateImages";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_AlternateImages>(obj, "AlternateImages", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_ExternalStreams 
/// </summary>
internal partial class APM_LegalAttestation_ExternalStreams : APM_LegalAttestation_ExternalStreams_Base
{
}


internal partial class APM_LegalAttestation_ExternalStreams_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_ExternalStreams";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_ExternalStreams>(obj, "ExternalStreams", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_TrueTypeFonts 
/// </summary>
internal partial class APM_LegalAttestation_TrueTypeFonts : APM_LegalAttestation_TrueTypeFonts_Base
{
}


internal partial class APM_LegalAttestation_TrueTypeFonts_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_TrueTypeFonts";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_TrueTypeFonts>(obj, "TrueTypeFonts", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_ExternalRefXobjects 
/// </summary>
internal partial class APM_LegalAttestation_ExternalRefXobjects : APM_LegalAttestation_ExternalRefXobjects_Base
{
}


internal partial class APM_LegalAttestation_ExternalRefXobjects_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_ExternalRefXobjects";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_ExternalRefXobjects>(obj, "ExternalRefXobjects", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_ExternalOPIdicts 
/// </summary>
internal partial class APM_LegalAttestation_ExternalOPIdicts : APM_LegalAttestation_ExternalOPIdicts_Base
{
}


internal partial class APM_LegalAttestation_ExternalOPIdicts_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_ExternalOPIdicts";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_ExternalOPIdicts>(obj, "ExternalOPIdicts", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_NonEmbeddedFonts 
/// </summary>
internal partial class APM_LegalAttestation_NonEmbeddedFonts : APM_LegalAttestation_NonEmbeddedFonts_Base
{
}


internal partial class APM_LegalAttestation_NonEmbeddedFonts_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_NonEmbeddedFonts";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_NonEmbeddedFonts>(obj, "NonEmbeddedFonts", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_DevDepGS_OP 
/// </summary>
internal partial class APM_LegalAttestation_DevDepGS_OP : APM_LegalAttestation_DevDepGS_OP_Base
{
}


internal partial class APM_LegalAttestation_DevDepGS_OP_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_DevDepGS_OP";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_DevDepGS_OP>(obj, "DevDepGS_OP", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_DevDepGS_HT 
/// </summary>
internal partial class APM_LegalAttestation_DevDepGS_HT : APM_LegalAttestation_DevDepGS_HT_Base
{
}


internal partial class APM_LegalAttestation_DevDepGS_HT_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_DevDepGS_HT";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_DevDepGS_HT>(obj, "DevDepGS_HT", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_DevDepGS_TR 
/// </summary>
internal partial class APM_LegalAttestation_DevDepGS_TR : APM_LegalAttestation_DevDepGS_TR_Base
{
}


internal partial class APM_LegalAttestation_DevDepGS_TR_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_DevDepGS_TR";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_DevDepGS_TR>(obj, "DevDepGS_TR", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_DevDepGS_UCR 
/// </summary>
internal partial class APM_LegalAttestation_DevDepGS_UCR : APM_LegalAttestation_DevDepGS_UCR_Base
{
}


internal partial class APM_LegalAttestation_DevDepGS_UCR_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_DevDepGS_UCR";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_DevDepGS_UCR>(obj, "DevDepGS_UCR", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_DevDepGS_BG 
/// </summary>
internal partial class APM_LegalAttestation_DevDepGS_BG : APM_LegalAttestation_DevDepGS_BG_Base
{
}


internal partial class APM_LegalAttestation_DevDepGS_BG_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_DevDepGS_BG";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_DevDepGS_BG>(obj, "DevDepGS_BG", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_DevDepGS_FL 
/// </summary>
internal partial class APM_LegalAttestation_DevDepGS_FL : APM_LegalAttestation_DevDepGS_FL_Base
{
}


internal partial class APM_LegalAttestation_DevDepGS_FL_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_DevDepGS_FL";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_DevDepGS_FL>(obj, "DevDepGS_FL", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_Annotations 
/// </summary>
internal partial class APM_LegalAttestation_Annotations : APM_LegalAttestation_Annotations_Base
{
}


internal partial class APM_LegalAttestation_Annotations_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_Annotations";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfIntNumber, APM_LegalAttestation_Annotations>(obj, "Annotations", IndirectRequirement.Either);
        if (val == null) { return; }
        // TODO special case
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_OptionalContent 
/// </summary>
internal partial class APM_LegalAttestation_OptionalContent : APM_LegalAttestation_OptionalContent_Base
{
}


internal partial class APM_LegalAttestation_OptionalContent_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_OptionalContent";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfBoolean, APM_LegalAttestation_OptionalContent>(obj, "OptionalContent", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// LegalAttestation_Attestation 
/// </summary>
internal partial class APM_LegalAttestation_Attestation : APM_LegalAttestation_Attestation_Base
{
}


internal partial class APM_LegalAttestation_Attestation_Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "LegalAttestation_Attestation";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfString, APM_LegalAttestation_Attestation>(obj, "Attestation", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

