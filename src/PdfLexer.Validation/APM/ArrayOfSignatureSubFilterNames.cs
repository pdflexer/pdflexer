// AUTOGENERATED DO NOT MODIFY

using PdfLexer;
using static PdfLexer.Validation.MathUtil;

namespace PdfLexer.Validation;

internal partial class APM_ArrayOfSignatureSubFilterNames : ISpecification<PdfArray>
{
    public static string Name { get; } = "ArrayOfSignatureSubFilterNames";
    public static bool RuleGroup() { return true; }
    public static bool AppliesTo(decimal version, List<string> extensions) => true; // managed by links
    public static void Validate(PdfValidator ctx, CallStack stack, PdfArray obj, IPdfObject? parent)
    {
        ctx.Run<APM_ArrayOfSignatureSubFilterNames_x, PdfArray>(stack, obj, parent);

    }

    public static bool MatchesType(PdfValidator ctx, PdfArray obj) 
    {
        return false;
    }
}

/// <summary>
/// ArrayOfSignatureSubFilterNames_* Table 260 and Table 237, SubFilter cell and https://github.com/pdf-association/pdf-issues/issues/219
/// </summary>
internal partial class APM_ArrayOfSignatureSubFilterNames_x : ISpecification<PdfArray>
{
    public static string Name { get; } = "ArrayOfSignatureSubFilterNames_*";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfArray obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.5m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfArray obj, IPdfObject? parent)
    {
        for (var i = 0; i<obj.Count; i+=1) 
        {
            CheckSingle(i);
        }
        void CheckSingle(int n) 
        {
            var val = ctx.GetOptional<PdfName, APM_ArrayOfSignatureSubFilterNames_x>(obj, n, IndirectRequirement.Either);
            if (val == null) { return; }
            // no special cases
            
            
            if (!(val == "adbe.pkcs7.detached" || (ctx.Version <= 2.0m && val == "adbe.pkcs7.sha1") || val == "adbe.x509.rsa_sha1" || (ctx.Version < 2.0m || (ctx.Version >= 2.0m && val == "ETSI.CAdES.detached")) || (ctx.Version < 2.0m || (ctx.Version >= 2.0m && val == "ETSI.RFC3161")))) 
            {
                ctx.Fail<APM_ArrayOfSignatureSubFilterNames_x>($"Invalid value {val}, allowed are: [adbe.pkcs7.detached,fn:Deprecated(2.0,adbe.pkcs7.sha1),adbe.x509.rsa_sha1,fn:SinceVersion(2.0,ETSI.CAdES.detached),fn:SinceVersion(2.0,ETSI.RFC3161)]");
            }
            // no linked objects
            
        }
    }
}

