// AUTOGENERATED DO NOT MODIFY

using PdfLexer;
using static PdfLexer.Validation.MathUtil;

namespace PdfLexer.Validation;

using System.Linq;

internal partial class APM_3DUnits : APM_3DUnits__Base
{
}

internal partial class APM_3DUnits__Base : ISpecification<PdfDictionary>
{
    public static bool RuleGroup() { return true; }
    public static string Name { get; } = "3DUnits";
    public static bool AppliesTo(decimal version, List<string> extensions) => true; // managed by links
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        ctx.Run<APM_3DUnits_TSm, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_3DUnits_TSn, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_3DUnits_TU, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_3DUnits_USm, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_3DUnits_USn, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_3DUnits_UU, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_3DUnits_DSm, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_3DUnits_DSn, PdfDictionary>(stack, obj, parent);
        ctx.Run<APM_3DUnits_DU, PdfDictionary>(stack, obj, parent);
        switch (ctx.Version) {
            case 1.7m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_17.Contains(x)))
                {
                    ctx.Fail<APM_3DUnits>($"Unknown field {extra} for version 1.7");
                }
                break;
            case 1.8m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_18.Contains(x)))
                {
                    ctx.Fail<APM_3DUnits>($"Unknown field {extra} for version 1.8");
                }
                break;
            case 1.9m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_19.Contains(x)))
                {
                    ctx.Fail<APM_3DUnits>($"Unknown field {extra} for version 1.9");
                }
                break;
            case 2.0m:
                foreach (var extra in obj.Keys.Where(x=> !AllowedFields_20.Contains(x)))
                {
                    ctx.Fail<APM_3DUnits>($"Unknown field {extra} for version 2.0");
                }
                break;
            default:
                break;
        }
    }

    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) 
    {
        return false;
    }

    public static HashSet<string> AllowedFields_17 { get; } = new HashSet<string> 
    {
        "TSm", "TSn", "TU", "USm", "USn", "UU", "DSm", "DSn", "DU"
    };
    public static HashSet<string> AllowedFields_18 { get; } = new HashSet<string> 
    {
        "TSm", "TSn", "TU", "USm", "USn", "UU", "DSm", "DSn", "DU"
    };
    public static HashSet<string> AllowedFields_19 { get; } = new HashSet<string> 
    {
        "TSm", "TSn", "TU", "USm", "USn", "UU", "DSm", "DSn", "DU"
    };
    public static HashSet<string> AllowedFields_20 { get; } = new HashSet<string> 
    {
        "TSm", "TSn", "TU", "USm", "USn", "UU", "DSm", "DSn", "DU"
    };
    


}

/// <summary>
/// 3DUnits_TSm Table 325
/// </summary>
internal partial class APM_3DUnits_TSm : APM_3DUnits_TSm__Base
{
}


internal partial class APM_3DUnits_TSm__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "3DUnits_TSm";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfNumber, APM_3DUnits_TSm>(obj, "TSm", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// 3DUnits_TSn 
/// </summary>
internal partial class APM_3DUnits_TSn : APM_3DUnits_TSn__Base
{
}


internal partial class APM_3DUnits_TSn__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "3DUnits_TSn";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfNumber, APM_3DUnits_TSn>(obj, "TSn", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// 3DUnits_TU 
/// </summary>
internal partial class APM_3DUnits_TU : APM_3DUnits_TU__Base
{
}


internal partial class APM_3DUnits_TU__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "3DUnits_TU";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        
        var val = ctx.GetOptional<PdfString, APM_3DUnits_TU>(obj, "TU", IndirectRequirement.Either);
        if (((obj.ContainsKey(PdfName.TSm)||obj.ContainsKey(val))) && val == null) {
            ctx.Fail<APM_3DUnits_TU>("TU is required when 'fn:IsRequired(fn:IsPresent(TSm) || fn:IsPresent(TSn))"); return;
        } else if (val == null) {
            return;
        }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// 3DUnits_USm 
/// </summary>
internal partial class APM_3DUnits_USm : APM_3DUnits_USm__Base
{
}


internal partial class APM_3DUnits_USm__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "3DUnits_USm";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfNumber, APM_3DUnits_USm>(obj, "USm", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// 3DUnits_USn 
/// </summary>
internal partial class APM_3DUnits_USn : APM_3DUnits_USn__Base
{
}


internal partial class APM_3DUnits_USn__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "3DUnits_USn";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfNumber, APM_3DUnits_USn>(obj, "USn", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// 3DUnits_UU 
/// </summary>
internal partial class APM_3DUnits_UU : APM_3DUnits_UU__Base
{
}


internal partial class APM_3DUnits_UU__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "3DUnits_UU";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        
        var val = ctx.GetOptional<PdfString, APM_3DUnits_UU>(obj, "UU", IndirectRequirement.Either);
        if (((obj.ContainsKey(PdfName.USm)||obj.ContainsKey(val))) && val == null) {
            ctx.Fail<APM_3DUnits_UU>("UU is required when 'fn:IsRequired(fn:IsPresent(USm) || fn:IsPresent(USn))"); return;
        } else if (val == null) {
            return;
        }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// 3DUnits_DSm 
/// </summary>
internal partial class APM_3DUnits_DSm : APM_3DUnits_DSm__Base
{
}


internal partial class APM_3DUnits_DSm__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "3DUnits_DSm";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfNumber, APM_3DUnits_DSm>(obj, "DSm", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// 3DUnits_DSn 
/// </summary>
internal partial class APM_3DUnits_DSn : APM_3DUnits_DSn__Base
{
}


internal partial class APM_3DUnits_DSn__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "3DUnits_DSn";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        var val = ctx.GetOptional<PdfNumber, APM_3DUnits_DSn>(obj, "DSn", IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

/// <summary>
/// 3DUnits_DU 
/// </summary>
internal partial class APM_3DUnits_DU : APM_3DUnits_DU__Base
{
}


internal partial class APM_3DUnits_DU__Base : ISpecification<PdfDictionary>
{
    public static string Name { get; } = "3DUnits_DU";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfDictionary obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return false; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfDictionary obj, IPdfObject? parent)
    {
        
        var val = ctx.GetOptional<PdfString, APM_3DUnits_DU>(obj, "DU", IndirectRequirement.Either);
        if (((obj.ContainsKey(PdfName.DSm)||obj.ContainsKey(val))) && val == null) {
            ctx.Fail<APM_3DUnits_DU>("DU is required when 'fn:IsRequired(fn:IsPresent(DSm) || fn:IsPresent(DSn))"); return;
        } else if (val == null) {
            return;
        }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }


}

