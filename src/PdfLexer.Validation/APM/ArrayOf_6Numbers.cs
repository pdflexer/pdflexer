// AUTOGENERATED DO NOT MODIFY

using PdfLexer;
using static PdfLexer.Validation.MathUtil;

namespace PdfLexer.Validation;

internal partial class APM_ArrayOf_6Numbers : ISpecification<PdfArray>
{
    public static string Name { get; } = "ArrayOf_6Numbers";
    public static bool RuleGroup() { return true; }
    public static bool AppliesTo(decimal version, List<string> extensions) => true; // managed by links
    public static void Validate(PdfValidator ctx, CallStack stack, PdfArray obj, IPdfObject? parent)
    {
        ctx.Run<APM_ArrayOf_6Numbers_0, PdfArray>(stack, obj, parent);
        ctx.Run<APM_ArrayOf_6Numbers_1, PdfArray>(stack, obj, parent);
        ctx.Run<APM_ArrayOf_6Numbers_2, PdfArray>(stack, obj, parent);
        ctx.Run<APM_ArrayOf_6Numbers_3, PdfArray>(stack, obj, parent);
        ctx.Run<APM_ArrayOf_6Numbers_4, PdfArray>(stack, obj, parent);
        ctx.Run<APM_ArrayOf_6Numbers_5, PdfArray>(stack, obj, parent);

    }

    public static bool MatchesType(PdfValidator ctx, PdfArray obj) 
    {
        return false;
    }
}

/// <summary>
/// ArrayOf_6Numbers_0 
/// </summary>
internal partial class APM_ArrayOf_6Numbers_0 : ISpecification<PdfArray>
{
    public static string Name { get; } = "ArrayOf_6Numbers_0";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfArray obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.3m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfArray obj, IPdfObject? parent)
    {
        var val = ctx.GetRequired<PdfNumber, APM_ArrayOf_6Numbers_0>(obj, 0, IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }
}

/// <summary>
/// ArrayOf_6Numbers_1 
/// </summary>
internal partial class APM_ArrayOf_6Numbers_1 : ISpecification<PdfArray>
{
    public static string Name { get; } = "ArrayOf_6Numbers_1";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfArray obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.3m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfArray obj, IPdfObject? parent)
    {
        var val = ctx.GetRequired<PdfNumber, APM_ArrayOf_6Numbers_1>(obj, 1, IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }
}

/// <summary>
/// ArrayOf_6Numbers_2 
/// </summary>
internal partial class APM_ArrayOf_6Numbers_2 : ISpecification<PdfArray>
{
    public static string Name { get; } = "ArrayOf_6Numbers_2";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfArray obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.3m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfArray obj, IPdfObject? parent)
    {
        var val = ctx.GetRequired<PdfNumber, APM_ArrayOf_6Numbers_2>(obj, 2, IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }
}

/// <summary>
/// ArrayOf_6Numbers_3 
/// </summary>
internal partial class APM_ArrayOf_6Numbers_3 : ISpecification<PdfArray>
{
    public static string Name { get; } = "ArrayOf_6Numbers_3";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfArray obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.3m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfArray obj, IPdfObject? parent)
    {
        var val = ctx.GetRequired<PdfNumber, APM_ArrayOf_6Numbers_3>(obj, 3, IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }
}

/// <summary>
/// ArrayOf_6Numbers_4 
/// </summary>
internal partial class APM_ArrayOf_6Numbers_4 : ISpecification<PdfArray>
{
    public static string Name { get; } = "ArrayOf_6Numbers_4";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfArray obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.3m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfArray obj, IPdfObject? parent)
    {
        var val = ctx.GetRequired<PdfNumber, APM_ArrayOf_6Numbers_4>(obj, 4, IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }
}

/// <summary>
/// ArrayOf_6Numbers_5 
/// </summary>
internal partial class APM_ArrayOf_6Numbers_5 : ISpecification<PdfArray>
{
    public static string Name { get; } = "ArrayOf_6Numbers_5";
    public static bool RuleGroup() { return false; }
    public static bool MatchesType(PdfValidator ctx, PdfArray obj) { return false; } // not used for children
    public static bool AppliesTo(decimal version, List<string> extensions) { return version >= 1.3m; }
    public static void Validate(PdfValidator ctx, CallStack stack, PdfArray obj, IPdfObject? parent)
    {
        var val = ctx.GetRequired<PdfNumber, APM_ArrayOf_6Numbers_5>(obj, 5, IndirectRequirement.Either);
        if (val == null) { return; }
        // no special cases
        // no value restrictions
        // no linked objects
        
    }
}

